<?php

function search($search, $current_attribute) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );
        $select_query = "SELECT * FROM ID INNER JOIN website ON ID.Personid = website.Personid WHERE $current_attribute LIKE \"%{$search}%\"";
        $statement = $db -> prepare($select_query);
        $statement -> execute();
        if (count($statement -> fetchAll()) == 0) {
            return 0;
        } else {
            echo "      <style>

                         th, td {
                             padding: 8px;
                             border: 1px solid #ddd;
                             overflow: hidden;
                             text-overflow: ellipsis;
                         }

                         th {
                            text-align: center;
                         }

                         td {
                            text-align: left;
                         }
                         </style>";
            echo "      <table>";
            echo "        <thead>";
            echo "          <tr>";
            echo "            <th>ID</th>\n";
            echo "            <th>Site</th>\n";
            echo "            <th>URL</th>\n";
            echo "            <th>Email Address</th>";
            echo "            <th>UserName</th>";
            echo "            <th>PW</th>";
            echo "            <th>Command</th>";
            echo "          </tr>";
            echo "        </thead>";
            echo "        <tbody>";

            // Populate the table with data coming from the database...
            foreach ($db ->query($select_query) as $row) {
                echo "          <tr>";
                echo "            <td>" . htmlspecialchars($row['Personid']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['Site']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['URL']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['Email_Address']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['UserName']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['PW']) . "</td>";
                echo "            <td>" . htmlspecialchars($row['Comment']) . "</td>";
                echo "          </tr>\n";
            }

            echo "         </tbody>\n";
            echo "      </table>\n";
        }
    } catch( PDOException $e ) {
        echo '<p>The following message was generated by function <code>search</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";
        echo "<p>There are a few reasons for this. Perhaps the database doesn’t exist or wasn’t mounted. Does the volume/drive containing the database have read and write permissions?</p>\n";
        echo '<p>Click <a href="./">here</a> to go back.</p>';

        exit;
    }
}

function insert($Site, $URL, $Email_Address, $UserName, $PW, $comment) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );
        $db ->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        $statement=$db->prepare("INSERT INTO ID(website, UserName, PW, comment) VALUES (:Site, :UserName, :PW, :comment)");
        $statement->execute(
            array(
                'Site'   => $Site,
                'UserName' => $UserName,
                'PW' => $PW,
                'comment' => $comment
            )
        );
        $statement2 = $db->prepare("INSERT INTO website(Site, URL, Email_Address) VALUES (:Site, :URL, :Email_Address)");
        $statement2->execute(
            array(
                'Site' => $Site,
                'URL' => $URL,
                'Email_Address' => $Email_Address
            )
        );
        $statement3 = $db->prepare("INSERT INTO has(UserID, Site_Name) VALUES (:UserName,:Site)");
        $statement3->execute(
            array(
                'UserName' => $UserName,
                'Site' => $Site,
            )
        );
        echo "Success";
    } catch(PDOException $e) {
        echo '<p>The following message was generated by function <code>insert</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

        exit;
    }
}

function delete($current_attribute, $pattern) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );
        if($current_attribute == "UserName") {
            $statement=$db->prepare("DELETE ID, website FROM ID INNER JOIN website ON (ID.Personid=website.Personid) WHERE {$current_attribute} LIKE :pattern");
            $statement->bindValue(':pattern', "%{$pattern}%", PDO::PARAM_STR);
            $statement->execute();

        }
        else if ($current_attribute == "Email_Address") {
            $statement = $db->prepare("DELETE ID, website FROM website INNER JOIN ID ON (ID.Personid=website.Personid) WHERE {$current_attribute} LIKE :pattern");
            $statement->bindValue(':pattern', "%{$pattern}%", PDO::PARAM_STR);
            $statement->execute();
        }
        echo "Success";
    } catch(PDOException $e) {
        echo '<p>The following message was generated by function <code>delete</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

        exit;
    }
}

function update($current_attribute, $new_attribute, $query_attribute, $pattern, $ID) {
    try {
        $db = new PDO(
            "mysql:host=" . DBHOST . "; dbname=" . DBNAME . ";charset=utf8",
            DBUSER,
            DBPASS
        );

        $website_attribute = array("Site","URL","Email_Address");
        $ID_attribute = array("website", "UserName", "PW", "Comment");

        define("Site", "Site");
        define("Email_Address", "Email_Address");
        define("UserName", "UserName");

        switch ($query_attribute) {
            case Site:
                if(in_array($current_attribute, $website_attribute)) {
                    $statement=$db -> query("UPDATE website SET {$current_attribute}=\"{$new_attribute}\" WHERE {$query_attribute} LIKE \"%{$pattern}%\" AND website.Personid = $ID");
                    $statement->execute();
                }
                else {
                    $query_attribute = "website";
                    $statement=$db -> query("UPDATE ID SET {$current_attribute}=\"{$new_attribute}\" WHERE {$query_attribute} LIKE \"%{$pattern}%\" AND ID.Personid = $ID");
                    $statement->execute();
                }
                break;
            case Email_Address:
                if(in_array("$current_attribute",$website_attribute)) {
                    $statement=$db -> query("UPDATE website SET {$current_attribute}=\"{$new_attribute}\" WHERE {$query_attribute} LIKE \"%{$pattern}%\" AND website.Personid = $ID");
                    $statement->execute();
                }
                else {
                    $statement=$db -> query("UPDATE ID INNER JOIN website ON ID.Personid = website.Personid SET ID.{$current_attribute}=\"{$new_attribute}\" WHERE website.Email_Address LIKE \"%{$pattern}%\" AND ID.Personid = $ID");
                    $statement->execute();
                }
                break;
            case UserName:
                if(in_array("$current_attribute", $website_attribute)) {
                    $statement=$db -> query("UPDATE website INNER JOIN ID ON ID.Personid = website.Personid SET website.{$current_attribute}=\"{$new_attribute}\" WHERE ID.UserName LIKE \"%{$pattern}%\" AND website.Personid = $ID");
                    $statement->execute();
                }
                else {
                    $statement=$db -> query("UPDATE ID SET {$current_attribute}=\"{$new_attribute}\" WHERE {$query_attribute} LIKE \"%{$pattern}%\" AND ID.Personid = $ID");
                    $statement->execute();
                }
                break;

        }

    } catch( PDOException $e ) {
        echo '<p>The following message was generated by function <code>update</code>:</p>' . "\n";
        echo '<p id="error">' . $e -> getMessage() . '</p>' . "\n";

        exit;
    }
}

